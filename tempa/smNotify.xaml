<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:local="clr-namespace:CoffeeJelly.tempa">
    <!-- The taskbar context menu - the first row is a dummy to show off simple data binding -->
    <!--
        The "shared" directive is needed if we reopen the sample window a few times - WPF will otherwise
        reuse the same context menu (which is a resource) again (which will have its DataContext set to the old TaskbarIcon)
  -->
    <ContextMenu x:Shared="false" x:Key="SysTrayMenu">
        <MenuItem Header="О программе" Command="{Binding ShowAbout}" />
        <MenuItem Header="Настройки" Command="{Binding ShowWindowSettings}" />
        <Separator />
        <!--<MenuItem Header="График" Command="{Binding HideWindowCommand}" />-->
        <!--<MenuItem Header="Показания за день" Command="{Binding ShowWindowHome}" />
        <Separator />
        <MenuItem Header="Показания за месяц" Command="{Binding ShowWindowTwo}" />
        <Separator />-->
        <MenuItem Header="Exit" Command="{Binding ExitApplicationCommand}" />
    </ContextMenu>


    <!-- the application's NotifyIcon - started from App.xaml.cs. Declares its own view model. -->
    <tb:TaskbarIcon x:Key="NotifyIcon"
                    IconSource="/Icons/belsolodLogo.ico"
                    ToolTipText="Двойной щелчок - развернуть окно, правый щелчок - меню"
                    LeftClickCommand="{Binding ShowWindowCommand}"
                    DoubleClickCommand="{Binding ShowWindowCommand}"
                    ContextMenu="{StaticResource SysTrayMenu}">

         <!--self-assign a data context (could also be done programmatically)--> 
        <tb:TaskbarIcon.DataContext>
            <local:smNotifyViewModel />
        </tb:TaskbarIcon.DataContext>
    </tb:TaskbarIcon>
</ResourceDictionary>